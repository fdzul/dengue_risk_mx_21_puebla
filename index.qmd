---
title: "Programa de Prevención y Control del Dengue | 2025"
format: 
  dashboard:
    nav-buttons: [twitter, github, facebook]
theme: custom.scss
---

```{r setup}
library(sf)
mapview::mapviewOptions(default = TRUE,
                        basemaps.color.shuffle = FALSE)
```


# [**Hotspots de Dengue**]{style="font-size:2pt"}

::: panel-tabset

### [**Tehuacan**]{style="color:#990000"}

<html>
<head>
```{=html}
<style>
body {
  margin: 0px;
  width: auto; 
  height: auto;
}

.wrapper {
    display: grid;
    grid-gap: 2px;
    grid-template-columns: 220px 220px 220px 550px;
    grid-template-rows: 160px 160px 160px 160px;
    background-color: #772953;
    color: "#772953";
  }

  .box {
    background-color: #772953;
    color: "#772953";
    border-radius: 2px;
    padding: 5px;
    font-size: 100%;

  }

  .a {
    grid-column: 1 / 4;
    grid-row: 1 / 4;
  }
  .b {
    grid-column: 4 ;
    grid-row: 1 / 3;
  }
  .c {
    grid-column: 4 ;
    grid-row: 3 / 5 ;
  }
  .d {
    grid-column: 3;
    grid-row: 4;
  }
  .e {
    grid-column: 2;
    grid-row: 4;
  }
  .f {
    grid-column: 1;
    grid-row: 4;
  }
</style>
```
</head>
<body>
::: wrapper
::: {.box .a}
```{r hotspots_dengue_tehuacan}
loc <- rgeomex::extract_locality(cve_edo = "21", 
                                 locality = "Tehuacán")

# Step 2. Extract the hotspots ####
hotspots <- denmex::den_hotspots[loc, ]
mapview::mapview(hotspots,
                 zcol = "intensity_gi",
                 layer.name = "Intensidad",
                 label = FALSE,
                 color = "white",
                 lwd = 0.5, 
                 col.regions =  rcartocolor::carto_pal(n = max(hotspots$intensity_gi), 
                                                       name = "OrYel"))


```
:::

::: {.box .b}
```{r forest_plot_tehuacan, dpi = 300, fig.align = "center", out.height='100%', out.width = '100%',fig.show = "hold"}
 
# Logistic Regression
hotspots <- hotspots |>
    dplyr::mutate(DENV_2008_2010 = DENV_2008 + DENV_2009 + DENV_2010) |>
    plyr::mutate(DENV_2011_2014 = DENV_2011 + DENV_2012 + DENV_2013 + DENV_2014) |>
    dplyr::mutate(DENV_2015_2017 = DENV_2015 +  DENV_2016 + DENV_2017) |>
    dplyr::mutate(DENV_2018_2019 = DENV_2018 +  DENV_2019) |>
    dplyr::mutate(DENV_2020_2021 = DENV_2020 +  DENV_2021) |>
    dplyr::mutate(DENV_2022_2023 = DENV_2022 +  DENV_2023) 


# Logistic Regression
glm.fit <- glm(hotspots_gi ~ DENV_2008_2010 + DENV_2011_2014 +
                   DENV_2015_2017 + DENV_2018_2019 +
                   DENV_2020_2021 + DENV_2022_2023,
               data = hotspots, 
               family = binomial)

ggstats::ggcoef_table(glm.fit,
                      significance_labels = c("Significativo", 
                                              "No singificativo"),
                      stripped_rows = TRUE,
                      exponentiate = TRUE) 
```
:::

::: {.box .c}
```{r power_law_plot_tehuacan,dpi = 300, warning=FALSE, fig.align = "center", out.width = '100%',out.height='100%',fig.show = "hold"}
# Step 7. make the function por calculate the cumulative ####
funcumsum <- function(x){
    x$cumulative_n <- cumsum(x$n_cases)
    x$perc_cumsum_n <- round((cumsum(x$n_cases)/sum(x$n_cases))*100, digits = 1)
    #x$cumulative_ha <- cumsum(x$ha)
    #x$perc_cumsum_ha <- round((cumsum(x$ha)/sum(x$ha))*100, digits = 1)
    x$id <- 1
    x$id_cumsum <- cumsum(x$id)
    x$id_perc_cum <- round((cumsum(x$id)/nrow(x))*100, digits = 1)
    x
}
# step 8.
data_pareto <- hotspots   |>
    # sf::st_drop_geometry()  |>
    # dplyr::mutate(n_cases = rowSums(dplyr::select(., dplyr::starts_with("DENV"))),
    #              loc = "locality")
    #dplyr::mutate(n_cases = rowSums(dplyr::across(DENV_2008:DENV_2021)),
    #              loc = "locality")  |>
    dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    
    dplyr::select(loc, n_cases, hotspots_gi)  |>
    dplyr::arrange(loc, desc(hotspots_gi), desc(n_cases))  |>
    dplyr::group_by(loc)  |>
    tidyr::nest()  |>
    dplyr::mutate(pareto_cases = purrr::map(data,
                                            funcumsum))  |>
    dplyr::select(-data)  |>
    tidyr::unnest(cols = c(pareto_cases))

# step 4. visualization of pareto rules 
plotly::ggplotly(denhotspots::power_law_plot(x = data_pareto))  |> plotly::layout(showlegend = FALSE)

```
:::

::: {.box .d}
```{r gauge_blocks_tehuacan,fig.align = "center", out.height='100%', out.width = '100%', fig.width= 1.5, fig.height=1}
y_hot <- hotspots |> dplyr::filter(hotspots_gi == 1)
centroid <- rgeomex::blocks_ine20_mx_centroid |>
  sf::st_as_sf(coords = c("x", "y"), crs = 4326)
b_loc <- centroid[hotspots, ]
b_hot <- b_loc[y_hot, ]
flexdashboard::gauge(round((nrow(b_hot)/nrow(b_loc))*100, digits = 1),
                     min = 0, max = 100, 
                     symbol = '%', 
                     label = "Manzanas",
                     flexdashboard::gaugeSectors(success = c(0, 30), 
                                                 warning = c(31, 50), 
                                                 danger = c(51, 100),
                                                 colors = c("#11BB33", #"#63C1A0", 
                                                            "#FC8427",
                                                            "#E01A59")))
```
:::

::: {.box .e}
```{r gauge_AGEB_tehuacan, fig.align = "center", out.height='100%', out.width = '100%'}

y <- hotspots  |>
    sf::st_drop_geometry() |>
     dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)
  
flexdashboard::gauge(round((nrow(y_hot)/nrow(y))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "AGEBs",
      flexdashboard::gaugeSectors(success = c(0, 30), 
                                  warning = c(31, 50), 
                                  danger = c(51, 100),
                                  colors = c("#11BB33",
                                             "#FC8427",
                                             "#E01A59")))
```
:::

::: {.box .f}
```{r gauge_tehuacan, out.height='90%', out.width = '90%', fig.align = "center"}

y <- hotspots  |>
    sf::st_drop_geometry() |>
      dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)

flexdashboard::gauge(round((sum(y_hot$n_cases)/sum(y$n_cases))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "Casos de Dengue",
      flexdashboard::gaugeSectors(success = c(11, 100), 
                                  warning = c(6, 10), 
                                  danger = c(0, 5),
                                  colors = c("#11BB33", 
                                             "#FC8427",
                                             "#E01A59")))
```
:::
:::
</body>
</html>

### [**Izucar de Matamoros**]{style="color:#990000"}

<html>
<head>
```{=html}
<style>
body {
  margin: 0px;
  width: auto; 
  height: auto;
}

.wrapper {
    display: grid;
    grid-gap: 2px;
    grid-template-columns: 220px 220px 220px 550px;
    grid-template-rows: 160px 160px 160px 160px;
    background-color: #772953;
    color: "#772953";
  }

  .box {
    background-color: #772953;
    color: "#772953";
    border-radius: 2px;
    padding: 5px;
    font-size: 100%;

  }

  .a {
    grid-column: 1 / 4;
    grid-row: 1 / 4;
  }
  .b {
    grid-column: 4 ;
    grid-row: 1 / 3;
  }
  .c {
    grid-column: 4 ;
    grid-row: 3 / 5 ;
  }
  .d {
    grid-column: 3;
    grid-row: 4;
  }
  .e {
    grid-column: 2;
    grid-row: 4;
  }
  .f {
    grid-column: 1;
    grid-row: 4;
  }
</style>
```
</head>
<body>
::: wrapper
::: {.box .a}
```{r hotspots_dengue_izucar}
loc <- rgeomex::extract_locality(cve_edo = "21", 
                                 locality = "Izucar de Matamoros")

# Step 2. Extract the hotspots ####
hotspots <- denmex::den_hotspots[loc, ]
mapview::mapview(hotspots,
                 zcol = "intensity_gi",
                 layer.name = "Intensidad",
                 label = FALSE,
                 color = "white",
                 lwd = 0.5, 
                 col.regions =  rcartocolor::carto_pal(n = max(hotspots$intensity_gi), 
                                                       name = "OrYel"))


```
:::

::: {.box .b}
```{r forest_plot_izucar, dpi = 300, fig.align = "center", out.height='100%', out.width = '100%',fig.show = "hold"}
 
# Logistic Regression
hotspots <- hotspots |>
    dplyr::mutate(DENV_2008_2010 = DENV_2008 + DENV_2009 + DENV_2010) |>
    plyr::mutate(DENV_2011_2014 = DENV_2011 + DENV_2012 + DENV_2013 + DENV_2014) |>
    dplyr::mutate(DENV_2015_2017 = DENV_2015 +  DENV_2016 + DENV_2017) |>
    dplyr::mutate(DENV_2018_2019 = DENV_2018 +  DENV_2019) |>
    dplyr::mutate(DENV_2020_2021 = DENV_2020 +  DENV_2021) |>
    dplyr::mutate(DENV_2022_2023 = DENV_2022 +  DENV_2023) 


# Logistic Regression
glm.fit <- glm(hotspots_gi ~ DENV_2008_2010 + DENV_2011_2014 +
                   DENV_2015_2017 + DENV_2018_2019 +
                   DENV_2020_2021 + DENV_2022_2023,
               data = hotspots, 
               family = binomial)

ggstats::ggcoef_table(glm.fit,
                      significance_labels = c("Significativo", 
                                              "No singificativo"),
                      stripped_rows = TRUE,
                      exponentiate = TRUE) 
```
:::

::: {.box .c}
```{r power_law_plot_izucar,dpi = 300, warning=FALSE, fig.align = "center", out.width = '100%',out.height='100%',fig.show = "hold"}
# Step 7. make the function por calculate the cumulative ####
funcumsum <- function(x){
    x$cumulative_n <- cumsum(x$n_cases)
    x$perc_cumsum_n <- round((cumsum(x$n_cases)/sum(x$n_cases))*100, digits = 1)
    #x$cumulative_ha <- cumsum(x$ha)
    #x$perc_cumsum_ha <- round((cumsum(x$ha)/sum(x$ha))*100, digits = 1)
    x$id <- 1
    x$id_cumsum <- cumsum(x$id)
    x$id_perc_cum <- round((cumsum(x$id)/nrow(x))*100, digits = 1)
    x
}
# step 8.
data_pareto <- hotspots   |>
    # sf::st_drop_geometry()  |>
    # dplyr::mutate(n_cases = rowSums(dplyr::select(., dplyr::starts_with("DENV"))),
    #              loc = "locality")
    #dplyr::mutate(n_cases = rowSums(dplyr::across(DENV_2008:DENV_2021)),
    #              loc = "locality")  |>
    dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    
    dplyr::select(loc, n_cases, hotspots_gi)  |>
    dplyr::arrange(loc, desc(hotspots_gi), desc(n_cases))  |>
    dplyr::group_by(loc)  |>
    tidyr::nest()  |>
    dplyr::mutate(pareto_cases = purrr::map(data,
                                            funcumsum))  |>
    dplyr::select(-data)  |>
    tidyr::unnest(cols = c(pareto_cases))

# step 4. visualization of pareto rules 
plotly::ggplotly(denhotspots::power_law_plot(x = data_pareto))  |> plotly::layout(showlegend = FALSE)

```
:::

::: {.box .d}
```{r gauge_blocks_izucar,fig.align = "center", out.height='100%', out.width = '100%', fig.width= 1.5, fig.height=1}
y_hot <- hotspots |> dplyr::filter(hotspots_gi == 1)
centroid <- rgeomex::blocks_ine20_mx_centroid |>
  sf::st_as_sf(coords = c("x", "y"), crs = 4326)
b_loc <- centroid[hotspots, ]
b_hot <- b_loc[y_hot, ]
flexdashboard::gauge(round((nrow(b_hot)/nrow(b_loc))*100, digits = 1),
                     min = 0, max = 100, 
                     symbol = '%', 
                     label = "Manzanas",
                     flexdashboard::gaugeSectors(success = c(0, 30), 
                                                 warning = c(31, 50), 
                                                 danger = c(51, 100),
                                                 colors = c("#11BB33", #"#63C1A0", 
                                                            "#FC8427",
                                                            "#E01A59")))
```
:::

::: {.box .e}
```{r gauge_AGEB_izucar, fig.align = "center", out.height='100%', out.width = '100%'}

y <- hotspots  |>
    sf::st_drop_geometry() |>
     dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)
  
flexdashboard::gauge(round((nrow(y_hot)/nrow(y))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "AGEBs",
      flexdashboard::gaugeSectors(success = c(0, 30), 
                                  warning = c(31, 50), 
                                  danger = c(51, 100),
                                  colors = c("#11BB33",
                                             "#FC8427",
                                             "#E01A59")))
```
:::

::: {.box .f}
```{r gauge_izucar, out.height='90%', out.width = '90%', fig.align = "center"}

y <- hotspots  |>
    sf::st_drop_geometry() |>
      dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)

flexdashboard::gauge(round((sum(y_hot$n_cases)/sum(y$n_cases))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "Casos de Dengue",
      flexdashboard::gaugeSectors(success = c(11, 100), 
                                  warning = c(6, 10), 
                                  danger = c(0, 5),
                                  colors = c("#11BB33", 
                                             "#FC8427",
                                             "#E01A59")))
```
:::
:::
</body>
</html>

### [**Acatlán de Osorio**]{style="color:#990000"}

<html>
<head>
```{=html}
<style>
body {
  margin: 0px;
  width: auto; 
  height: auto;
}

.wrapper {
    display: grid;
    grid-gap: 2px;
    grid-template-columns: 220px 220px 220px 550px;
    grid-template-rows: 160px 160px 160px 160px;
    background-color: #772953;
    color: "#772953";
  }

  .box {
    background-color: #772953;
    color: "#772953";
    border-radius: 2px;
    padding: 5px;
    font-size: 100%;

  }

  .a {
    grid-column: 1 / 4;
    grid-row: 1 / 4;
  }
  .b {
    grid-column: 4 ;
    grid-row: 1 / 3;
  }
  .c {
    grid-column: 4 ;
    grid-row: 3 / 5 ;
  }
  .d {
    grid-column: 3;
    grid-row: 4;
  }
  .e {
    grid-column: 2;
    grid-row: 4;
  }
  .f {
    grid-column: 1;
    grid-row: 4;
  }
</style>
```
</head>
<body>
::: wrapper
::: {.box .a}
```{r hotspots_dengue_acatlan}
loc <- rgeomex::extract_locality(cve_edo = "21", 
                                 locality = "Acatlan de Osorio")

# Step 2. Extract the hotspots ####
hotspots <- denmex::den_hotspots[loc, ]
mapview::mapview(hotspots,
                 zcol = "intensity_gi",
                 layer.name = "Intensidad",
                 label = FALSE,
                 color = "white",
                 lwd = 0.5, 
                 col.regions =  rcartocolor::carto_pal(n = max(hotspots$intensity_gi), 
                                                       name = "OrYel"))


```
:::

::: {.box .b}
```{r forest_plot_acatlan, dpi = 300, fig.align = "center", out.height='100%', out.width = '100%',fig.show = "hold"}
 
# Logistic Regression
hotspots <- hotspots |>
    dplyr::mutate(DENV_2008_2010 = DENV_2008 + DENV_2009 + DENV_2010) |>
    plyr::mutate(DENV_2011_2014 = DENV_2011 + DENV_2012 + DENV_2013 + DENV_2014) |>
    dplyr::mutate(DENV_2015_2017 = DENV_2015 +  DENV_2016 + DENV_2017) |>
    dplyr::mutate(DENV_2018_2019 = DENV_2018 +  DENV_2019) |>
    dplyr::mutate(DENV_2020_2021 = DENV_2020 +  DENV_2021) |>
    dplyr::mutate(DENV_2022_2023 = DENV_2022 +  DENV_2023) 


# Logistic Regression
glm.fit <- glm(hotspots_gi ~ DENV_2008_2010 + DENV_2011_2014 +
                   DENV_2015_2017 + DENV_2018_2019 +
                   DENV_2020_2021 + DENV_2022_2023,
               data = hotspots, 
               family = binomial)

ggstats::ggcoef_table(glm.fit,
                      significance_labels = c("Significativo", 
                                              "No singificativo"),
                      stripped_rows = TRUE,
                      exponentiate = TRUE) 
```
:::

::: {.box .c}
```{r power_law_plot_acatlan,dpi = 300, warning=FALSE, fig.align = "center", out.width = '100%',out.height='100%',fig.show = "hold"}
# Step 7. make the function por calculate the cumulative ####
funcumsum <- function(x){
    x$cumulative_n <- cumsum(x$n_cases)
    x$perc_cumsum_n <- round((cumsum(x$n_cases)/sum(x$n_cases))*100, digits = 1)
    #x$cumulative_ha <- cumsum(x$ha)
    #x$perc_cumsum_ha <- round((cumsum(x$ha)/sum(x$ha))*100, digits = 1)
    x$id <- 1
    x$id_cumsum <- cumsum(x$id)
    x$id_perc_cum <- round((cumsum(x$id)/nrow(x))*100, digits = 1)
    x
}
# step 8.
data_pareto <- hotspots   |>
    # sf::st_drop_geometry()  |>
    # dplyr::mutate(n_cases = rowSums(dplyr::select(., dplyr::starts_with("DENV"))),
    #              loc = "locality")
    #dplyr::mutate(n_cases = rowSums(dplyr::across(DENV_2008:DENV_2021)),
    #              loc = "locality")  |>
    dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    
    dplyr::select(loc, n_cases, hotspots_gi)  |>
    dplyr::arrange(loc, desc(hotspots_gi), desc(n_cases))  |>
    dplyr::group_by(loc)  |>
    tidyr::nest()  |>
    dplyr::mutate(pareto_cases = purrr::map(data,
                                            funcumsum))  |>
    dplyr::select(-data)  |>
    tidyr::unnest(cols = c(pareto_cases))

# step 4. visualization of pareto rules 
plotly::ggplotly(denhotspots::power_law_plot(x = data_pareto))  |> plotly::layout(showlegend = FALSE)

```
:::

::: {.box .d}
```{r gauge_blocks_acatlan,fig.align = "center", out.height='100%', out.width = '100%', fig.width= 1.5, fig.height=1}
y_hot <- hotspots |> dplyr::filter(hotspots_gi == 1)
centroid <- rgeomex::blocks_ine20_mx_centroid |>
  sf::st_as_sf(coords = c("x", "y"), crs = 4326)
b_loc <- centroid[hotspots, ]
b_hot <- b_loc[y_hot, ]
flexdashboard::gauge(round((nrow(b_hot)/nrow(b_loc))*100, digits = 1),
                     min = 0, max = 100, 
                     symbol = '%', 
                     label = "Manzanas",
                     flexdashboard::gaugeSectors(success = c(0, 30), 
                                                 warning = c(31, 50), 
                                                 danger = c(51, 100),
                                                 colors = c("#11BB33", #"#63C1A0", 
                                                            "#FC8427",
                                                            "#E01A59")))
```
:::

::: {.box .e}
```{r gauge_AGEB_acatlan, fig.align = "center", out.height='100%', out.width = '100%'}

y <- hotspots  |>
    sf::st_drop_geometry() |>
     dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)
  
flexdashboard::gauge(round((nrow(y_hot)/nrow(y))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "AGEBs",
      flexdashboard::gaugeSectors(success = c(0, 30), 
                                  warning = c(31, 50), 
                                  danger = c(51, 100),
                                  colors = c("#11BB33",
                                             "#FC8427",
                                             "#E01A59")))
```
:::

::: {.box .f}
```{r gauge_acatlan, out.height='90%', out.width = '90%', fig.align = "center"}

y <- hotspots  |>
    sf::st_drop_geometry() |>
      dplyr::mutate(n_cases = rowSums(dplyr::across(dplyr::starts_with("DENV"))),
                  loc = "locality") |>
    dplyr::select(loc, n_cases, hotspots_gi) 
y_hot <- y |>dplyr::filter(hotspots_gi == 1)

flexdashboard::gauge(round((sum(y_hot$n_cases)/sum(y$n_cases))*100, digits = 1),
      min = 0, max = 100, 
      symbol = '%', 
      label = "Casos de Dengue",
      flexdashboard::gaugeSectors(success = c(11, 100), 
                                  warning = c(6, 10), 
                                  danger = c(0, 5),
                                  colors = c("#11BB33", 
                                             "#FC8427",
                                             "#E01A59")))
```
:::
:::
</body>
</html>
:::


# [**Hotspots del Vector**]{style="font-size:2pt"}

::: panel-tabset

### [**Tehuacán**]{style="color:#990000"}
```{r vector_tehuacan, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "Tehuacán",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```


### [**Izucar de Matamoros**]{style="color:#990000"}
```{r vector_izucar, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "Izucar de Matamoros",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```

### [**Actlán de Osorio**]{style="color:#990000"}
```{r vector_acatlan, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "Acatlán de Osorio",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```



### [**San Jose Acateno**]{style="color:#990000"}
```{r vector_acateno, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "San Jose Acateno",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```



### [**Ciudad de Chiuatla de Tapia**]{style="color:#990000"}
```{r vector_chiutla, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "Ciudad de Chiuatla de Tapia",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```


### [**Ciudad de Lázaro Cárdenas**]{style="color:#990000"}
```{r vector_lazaro_cardenas, dpi = 300, warning=FALSE, message=FALSE}
deneggs::map_eggs_hotspots(betas = denmex::eggs_betas_21_puebla,
                           locality = "Ciudad de Lázaro Cárdenas",
                           cve_edo = "21",
                           palette = rcartocolor::carto_pal,
                           name = "SunsetDark",
                           static_map = FALSE)
```



:::


# [**Escenarios Epidemiológicos**]{style="font-size:2pt"}

::: panel-tabset

### [**Tehuacán**]{style="color:#990000"}
```{r risk_ageb_tehuacan}
denhotspots::risk_ageb(betas = denmex::eggs_betas_21_puebla,
                       hotspots = denmex::den_hotspots,
                       intensity_perc = 25,
                       locality = "Tehuacán",
                       cve_edo = "21") |>
    denhotspots::map_risk(staticmap = FALSE)

```

### [**Izucar de Matamoros**]{style="color:#990000"}
```{r risk_ageb_izucar}
denhotspots::risk_ageb(betas = denmex::eggs_betas_21_puebla,
                       hotspots = denmex::den_hotspots,
                       intensity_perc = 25,
                       locality = "Izucar de Matamoros",
                       cve_edo = "21") |>
    denhotspots::map_risk(staticmap = FALSE)

```

### [**Acatlán de Osorio**]{style="color:#990000"}
```{r risk_ageb_acatlan}
denhotspots::risk_ageb(betas = denmex::eggs_betas_21_puebla,
                       hotspots = denmex::den_hotspots,
                       intensity_perc = 25,
                       locality = "Acatlán de Osorio",
                       cve_edo = "21") |>
    denhotspots::map_risk(staticmap = FALSE)

```


:::



